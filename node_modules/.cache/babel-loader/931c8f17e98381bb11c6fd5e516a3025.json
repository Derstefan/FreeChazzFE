{"ast":null,"code":"import axios from 'axios';\nimport serverConfig from \"../services/server-config.json\";\nconst MAIN_API_BASE_URL = serverConfig.host + \"/api\";\n\nclass MainService {\n  startNewGame(name) {\n    return axios.get(MAIN_API_BASE_URL + \"/newgame/\" + name);\n  }\n\n  startNewGameWithParams(name, params) {\n    return axios.post(MAIN_API_BASE_URL + \"/newgame/\" + name, params);\n  }\n\n  joinGame(gameId, name) {\n    return axios.get(MAIN_API_BASE_URL + \"/joingame/\" + gameId + \"/\" + name);\n  }\n\n  getGameData(gameId) {\n    return axios.get(MAIN_API_BASE_URL + \"/gamedata/\" + gameId, {\n      headers: this.authHeader()\n    });\n  }\n\n  getBoard(gameId) {\n    return axios.get(MAIN_API_BASE_URL + \"/board/\" + gameId, {\n      headers: this.authHeader()\n    });\n  }\n\n  play(gameId, draw) {\n    return axios.post(MAIN_API_BASE_URL + \"/play/\" + gameId, draw, {\n      headers: this.authHeader()\n    });\n  }\n\n  generatePiece(seed) {\n    return axios.get(MAIN_API_BASE_URL + \"/generatepiece/\" + seed);\n  }\n\n  findPiece(serial) {\n    return axios.get(MAIN_API_BASE_URL + \"/findpiece/\" + serial);\n  }\n\n  authHeader() {\n    const user = JSON.parse(localStorage.getItem(\"auth\"));\n\n    if (user && user.accessToken) {\n      return {\n        Authorization: \"Bearer \" + user.accessToken\n      };\n    }\n\n    return {};\n  }\n\n}\n\nexport default new MainService();","map":{"version":3,"sources":["/home/ich/Entwicklung/FreeChazz/repos/FreeChazzFE/src/services/main.service.jsx"],"names":["axios","serverConfig","MAIN_API_BASE_URL","host","MainService","startNewGame","name","get","startNewGameWithParams","params","post","joinGame","gameId","getGameData","headers","authHeader","getBoard","play","draw","generatePiece","seed","findPiece","serial","user","JSON","parse","localStorage","getItem","accessToken","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,MAAMC,iBAAiB,GAAGD,YAAY,CAACE,IAAb,GAAoB,MAA9C;;AAEA,MAAMC,WAAN,CAAkB;AAIdC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACf,WAAON,KAAK,CAACO,GAAN,CAAUL,iBAAiB,GAAG,WAApB,GAAkCI,IAA5C,CAAP;AACH;;AAEDE,EAAAA,sBAAsB,CAACF,IAAD,EAAOG,MAAP,EAAe;AACjC,WAAOT,KAAK,CAACU,IAAN,CAAWR,iBAAiB,GAAG,WAApB,GAAkCI,IAA7C,EAAmDG,MAAnD,CAAP;AACH;;AAEDE,EAAAA,QAAQ,CAACC,MAAD,EAASN,IAAT,EAAe;AACnB,WAAON,KAAK,CAACO,GAAN,CAAUL,iBAAiB,GAAG,YAApB,GAAmCU,MAAnC,GAA4C,GAA5C,GAAkDN,IAA5D,CAAP;AACH;;AAEDO,EAAAA,WAAW,CAACD,MAAD,EAAS;AAChB,WAAOZ,KAAK,CAACO,GAAN,CAAUL,iBAAiB,GAAG,YAApB,GAAmCU,MAA7C,EAAqD;AAAEE,MAAAA,OAAO,EAAE,KAAKC,UAAL;AAAX,KAArD,CAAP;AACH;;AAEDC,EAAAA,QAAQ,CAACJ,MAAD,EAAS;AACb,WAAOZ,KAAK,CAACO,GAAN,CAAUL,iBAAiB,GAAG,SAApB,GAAgCU,MAA1C,EAAkD;AAAEE,MAAAA,OAAO,EAAE,KAAKC,UAAL;AAAX,KAAlD,CAAP;AACH;;AAEDE,EAAAA,IAAI,CAACL,MAAD,EAASM,IAAT,EAAe;AACf,WAAOlB,KAAK,CAACU,IAAN,CAAWR,iBAAiB,GAAG,QAApB,GAA+BU,MAA1C,EAAkDM,IAAlD,EAAwD;AAAEJ,MAAAA,OAAO,EAAE,KAAKC,UAAL;AAAX,KAAxD,CAAP;AACH;;AAEDI,EAAAA,aAAa,CAACC,IAAD,EAAO;AAChB,WAAOpB,KAAK,CAACO,GAAN,CAAUL,iBAAiB,GAAG,iBAApB,GAAwCkB,IAAlD,CAAP;AACH;;AAEDC,EAAAA,SAAS,CAACC,MAAD,EAAS;AACd,WAAOtB,KAAK,CAACO,GAAN,CAAUL,iBAAiB,GAAG,aAApB,GAAoCoB,MAA9C,CAAP;AACH;;AAEDP,EAAAA,UAAU,GAAG;AACT,UAAMQ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AAEA,QAAIJ,IAAI,IAAIA,IAAI,CAACK,WAAjB,EAA8B;AAC1B,aAAO;AAAEC,QAAAA,aAAa,EAAE,YAAYN,IAAI,CAACK;AAAlC,OAAP;AACH;;AACD,WAAO,EAAP;AACH;;AA3Ca;;AAgDlB,eAAe,IAAIxB,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\nimport serverConfig from \"../services/server-config.json\";\n\nconst MAIN_API_BASE_URL = serverConfig.host + \"/api\";\n\nclass MainService {\n\n\n\n    startNewGame(name) {\n        return axios.get(MAIN_API_BASE_URL + \"/newgame/\" + name)\n    }\n\n    startNewGameWithParams(name, params) {\n        return axios.post(MAIN_API_BASE_URL + \"/newgame/\" + name, params)\n    }\n\n    joinGame(gameId, name) {\n        return axios.get(MAIN_API_BASE_URL + \"/joingame/\" + gameId + \"/\" + name)\n    }\n\n    getGameData(gameId) {\n        return axios.get(MAIN_API_BASE_URL + \"/gamedata/\" + gameId, { headers: this.authHeader() })\n    }\n\n    getBoard(gameId) {\n        return axios.get(MAIN_API_BASE_URL + \"/board/\" + gameId, { headers: this.authHeader() })\n    }\n\n    play(gameId, draw) {\n        return axios.post(MAIN_API_BASE_URL + \"/play/\" + gameId, draw, { headers: this.authHeader() })\n    }\n\n    generatePiece(seed) {\n        return axios.get(MAIN_API_BASE_URL + \"/generatepiece/\" + seed);\n    }\n\n    findPiece(serial) {\n        return axios.get(MAIN_API_BASE_URL + \"/findpiece/\" + serial);\n    }\n\n    authHeader() {\n        const user = JSON.parse(localStorage.getItem(\"auth\"));\n\n        if (user && user.accessToken) {\n            return { Authorization: \"Bearer \" + user.accessToken };\n        }\n        return {};\n    }\n\n\n}\n\nexport default new MainService()"]},"metadata":{},"sourceType":"module"}