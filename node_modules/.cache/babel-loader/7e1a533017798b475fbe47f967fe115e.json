{"ast":null,"code":"import _toConsumableArray from\"/home/ich/Entwicklung/FreeChazz/repos/FreeChazzFE/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/home/ich/Entwicklung/FreeChazz/repos/FreeChazzFE/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/ich/Entwicklung/FreeChazz/repos/FreeChazzFE/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/ich/Entwicklung/FreeChazz/repos/FreeChazzFE/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/ich/Entwicklung/FreeChazz/repos/FreeChazzFE/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{Component}from'react';import RandomGenerator from'../random-generator';import UtilFunctions from'../util-functions';/**\n * Piece Generator for black and white design as silhouettes\n */var ChessPieceGenerator=/*#__PURE__*/function(_Component){_inherits(ChessPieceGenerator,_Component);var _super=_createSuper(ChessPieceGenerator);function ChessPieceGenerator(width,height,seedstr){var _this;_classCallCheck(this,ChessPieceGenerator);_this=_super.call(this);_this.gen=new RandomGenerator(seedstr);_this.width=width;_this.height=height;_this.canvas2=document.createElement('canvas');_this.c2=_this.canvas2.getContext('2d');_this.canvas2.width=width;_this.canvas2.height=height;_this.leftBorder=_this.width/3;_this.rightBorder=2*_this.width/3;return _this;}_createClass(ChessPieceGenerator,[{key:\"randomColor\",value:function randomColor(){var r=Math.floor(this.gen.random()*230).toString(16);var g=Math.floor(this.gen.random()*230).toString(16);var b=Math.floor(this.gen.random()*230).toString(16);return\"#\"+r+g+b;}},{key:\"randomPointsLeft\",value:function randomPointsLeft(num){var points=[];var ys=[];for(var i=0;i<num;i++){var y=this.gen.randNumOfRange(0,this.height);ys.push(y);}ys.sort(function(a,b){return a-b;});for(var i=0;i<num;i++){var x=this.gen.randNumOfRange(0,this.leftBorder);points.push({x:x,y:ys[i]});}console.log(points);return points;}},{key:\"drawSilhouette\",value:function drawSilhouette(points){var pointNumber=this.gen.randNumOfRange(8,13);var points=this.randomPointsLeft(pointNumber);var color=this.randomColor();this.c2.fillStyle=color;var shape=new Path2D();for(var i=0;i<points.length-1;i++){if(i===0){shape.moveTo(points[i].x,points[i].y);}else if(i%2===0){shape.quadraticCurveTo(points[i-1].x,points[i-1].y,points[i].x,points[i].y);}}shape.lineTo(points[points.length-1].x,points[points.length-1].y);for(var i=points.length-1;i>1;i--){if(i===points.length-1){shape.lineTo(this.rightBorder-points[i].x,points[i].y);}else if(i%2===0){shape.quadraticCurveTo(this.rightBorder-points[i+1].x,points[i+1].y,this.rightBorder-points[i].x,points[i].y);}}shape.lineTo(this.rightBorder-points[1].x,points[1].y);shape.lineTo(points[0].x,points[0].y);this.c2.fill(shape);}},{key:\"drawSilhouettes\",value:function drawSilhouettes(num){var _this2=this;return _toConsumableArray(Array(num).keys()).map(function(){return _this2.drawSilhouette();});}},{key:\"drawPieceCanvas\",value:function drawPieceCanvas(owner){if(owner==\"P1\"){this.drawSilhouette();this.drawSilhouette();}else{this.drawSilhouette();}// this.drawMirroredPolygon();\n// this.drawMirroredPolygonColorDiff();\n// this.drawMirroredPolygon();\n// //this.drawMirroredPolygon();\n// //        this.drawMirroredPolygonColorDiff();\n// //this.drawMirroredPolygon();\n// this.drawMirroredPolygon();\nreturn this.canvas2;}}]);return ChessPieceGenerator;}(Component);export default ChessPieceGenerator;","map":{"version":3,"sources":["/home/ich/Entwicklung/FreeChazz/repos/FreeChazzFE/src/components/generator/silhouettes/chess-piece-generator.jsx"],"names":["Component","RandomGenerator","UtilFunctions","ChessPieceGenerator","width","height","seedstr","gen","canvas2","document","createElement","c2","getContext","leftBorder","rightBorder","r","Math","floor","random","toString","g","b","num","points","ys","i","y","randNumOfRange","push","sort","a","x","console","log","pointNumber","randomPointsLeft","color","randomColor","fillStyle","shape","Path2D","length","moveTo","quadraticCurveTo","lineTo","fill","Array","keys","map","drawSilhouette","owner"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport RandomGenerator from '../random-generator';\nimport UtilFunctions from '../util-functions';\n\n\n\n/**\n * Piece Generator for black and white design as silhouettes\n */\nclass ChessPieceGenerator extends Component {\n\n    constructor(width, height, seedstr) {\n        super();\n        this.gen = new RandomGenerator(seedstr);\n        this.width = width;\n        this.height = height;\n        this.canvas2 = document.createElement('canvas');\n        this.c2 = this.canvas2.getContext('2d');\n        this.canvas2.width = width;\n        this.canvas2.height = height;\n        this.leftBorder = this.width / 3;\n        this.rightBorder = 2 * this.width / 3;\n    }\n\n\n\n\n    randomColor() {\n        var r = Math.floor(this.gen.random() * 230).toString(16);\n        var g = Math.floor(this.gen.random() * 230).toString(16);\n        var b = Math.floor(this.gen.random() * 230).toString(16);\n        return \"#\" + r + g + b;\n    }\n\n    randomPointsLeft(num) {\n        var points = [];\n        var ys = [];\n        for (var i = 0; i < num; i++) {\n            var y = this.gen.randNumOfRange(0, this.height);\n            ys.push(y);\n        }\n        ys.sort((a, b) => a - b);\n        for (var i = 0; i < num; i++) {\n            var x = this.gen.randNumOfRange(0, this.leftBorder);\n            points.push({ x: x, y: ys[i] });\n        }\n        console.log(points);\n        return points;\n    }\n\n\n\n\n    drawSilhouette(points) {\n\n\n        var pointNumber = this.gen.randNumOfRange(8, 13);\n        var points = this.randomPointsLeft(pointNumber);\n        var color = this.randomColor();\n        this.c2.fillStyle = color;\n\n        var shape = new Path2D();\n        for (var i = 0; i < points.length - 1; i++) {\n            if (i === 0) {\n                shape.moveTo(points[i].x, points[i].y);\n            } else if (i % 2 === 0) {\n                shape.quadraticCurveTo(points[i - 1].x, points[i - 1].y, points[i].x, points[i].y)\n            }\n        }\n        shape.lineTo(points[points.length - 1].x, points[points.length - 1].y);\n        for (var i = points.length - 1; i > 1; i--) {\n            if (i === points.length - 1) {\n                shape.lineTo(this.rightBorder - points[i].x, points[i].y);\n            } else if (i % 2 === 0) {\n                shape.quadraticCurveTo(this.rightBorder - points[i + 1].x, points[i + 1].y, this.rightBorder - points[i].x, points[i].y)\n            }\n        }\n        shape.lineTo(this.rightBorder - points[1].x, points[1].y);\n        shape.lineTo(points[0].x, points[0].y);\n        this.c2.fill(shape);\n    }\n\n\n\n    drawSilhouettes(num) {\n        return [...Array(num).keys()].map(() => this.drawSilhouette());\n    }\n\n\n\n    drawPieceCanvas(owner) {\n        if (owner == \"P1\") {\n            this.drawSilhouette();\n            this.drawSilhouette();\n        } else {\n            this.drawSilhouette();\n        }\n\n        // this.drawMirroredPolygon();\n        // this.drawMirroredPolygonColorDiff();\n        // this.drawMirroredPolygon();\n        // //this.drawMirroredPolygon();\n        // //        this.drawMirroredPolygonColorDiff();\n        // //this.drawMirroredPolygon();\n        // this.drawMirroredPolygon();\n\n        return (\n            this.canvas2\n        );\n    }\n\n\n\n\n}\n\nexport default ChessPieceGenerator"]},"metadata":{},"sourceType":"module"}