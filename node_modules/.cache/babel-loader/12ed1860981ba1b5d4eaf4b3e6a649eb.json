{"ast":null,"code":"import _classCallCheck from\"/home/ich/Entwicklung/FreeChazz/repos/FreeChazzFE/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/ich/Entwicklung/FreeChazz/repos/FreeChazzFE/node_modules/@babel/runtime/helpers/esm/createClass.js\";import Config from\"./config.json\";var PieceCard=/*#__PURE__*/function(){function PieceCard(){_classCallCheck(this,PieceCard);this.canvas=document.createElement('canvas');this.ctx=this.canvas.getContext('2d');this.canvas.width=Config.card.width;this.canvas.height=Config.card.height;}_createClass(PieceCard,[{key:\"drawCanvas\",value:function drawCanvas(actions,pieceImage,owner,isKing){var actionsSize=Config.card.actionsSize;var actionsOffsetX=Config.card.actionsOffsetX;var actionsOffsetY=Config.card.actionsOffsetY;var ctx=this.ctx;if(actions!==undefined){ctx.canvas.width=Config.card.width;ctx.canvas.height=Config.card.height;ctx.drawImage(pieceImage,32,10);// draw actions\nvar actionLegend=[];for(var i=0;i<actions.length;i++){for(var j=0;j<actions[0].length;j++){if(actions[i][j]!==\"-\"){var offsetY;if(owner===\"P1\"){offsetY=actionsOffsetY+(actions[0].length-1-j)*actionsSize;}else{offsetY=actionsOffsetY+j*actionsSize;}if(!actionLegend.includes(actions[i][j])){actionLegend.push(actions[i][j]);}ctx.fillStyle=this.mapActionToColor(actions[i][j]);ctx.fillRect(actionsOffsetX+i*actionsSize,offsetY,actionsSize,actionsSize);}}}ctx.lineWidth=0.5;ctx.strokeStyle=\"#AAAAAA\";for(i=0;i<actions.length+1;i++){//  ctx.drawline(actionsOffsetX + i * actionsSize, actionsOffsetY, actionsOffsetX + i * actionsSize, actionsOffsetX + actions.length + 1 * actionsSize);\n//console.log(i);\nctx.beginPath();ctx.moveTo(actionsOffsetX+i*actionsSize,actionsOffsetY);ctx.lineTo(actionsOffsetX+i*actionsSize,actionsOffsetY+actions.length*actionsSize);ctx.stroke();ctx.beginPath();ctx.moveTo(actionsOffsetX,actionsOffsetY+i*actionsSize);ctx.lineTo(actionsOffsetX+actions.length*actionsSize,actionsOffsetY+i*actionsSize);ctx.stroke();}if(isKing){ctx.font=\"20px Arial\";ctx.fillStyle=\"#111111\";ctx.fillText(\"â™”\",this.canvas.width-20,37);}}// Legend\nfor(i=0;i<actionLegend.length;i++){ctx.fillStyle=this.mapActionToColor(actionLegend[i]);//console.log(actionLegend[i]);\nctx.fillRect(actionsOffsetX,actionsOffsetY+actions.length*actionsSize+(i+1)*2*actionsSize,actionsSize,actionsSize);ctx.font=\"10px Arial\";ctx.fillText(this.mapActionToText(actionLegend[i]),actionsOffsetX+actionsSize*2,actionsOffsetY+actions.length*actionsSize+(i+1)*2*actionsSize+actionsSize);}}},{key:\"mapActionToColor\",value:function mapActionToColor(str){if(str===\"P\"){return\"#11AA11\";}else if(str===\"E\"){return\"#BBBB11\";}else if(str===\"F\"){return\"#1111BB\";}else if(str===\"M\"){return\"#11BBBB\";}else if(str===\"S\"){return\"#BB55BB\";}else if(str===\"R\"){return\"#BB1111\";}else{return\"#666666\";}}},{key:\"mapActionToText\",value:function mapActionToText(str){if(str===\"P\"){return\"piece location\";}else if(str===\"E\"){return\"attack only\";}else if(str===\"F\"){return\"move only\";}else if(str===\"M\"){return\"walk a way\";}else if(str===\"S\"){return\"swap positions\";}else if(str===\"R\"){return\"rush\";}else{return\"attack or just move\";}}},{key:\"drawPieceCard\",value:function drawPieceCard(actions,pieceImage,owner,isKing){this.drawCanvas(actions,pieceImage,owner,isKing);return this.canvas;}}]);return PieceCard;}();export default PieceCard;","map":{"version":3,"sources":["/home/ich/Entwicklung/FreeChazz/repos/FreeChazzFE/src/game/piece-card.jsx"],"names":["Config","PieceCard","canvas","document","createElement","ctx","getContext","width","card","height","actions","pieceImage","owner","isKing","actionsSize","actionsOffsetX","actionsOffsetY","undefined","drawImage","actionLegend","i","length","j","offsetY","includes","push","fillStyle","mapActionToColor","fillRect","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","font","fillText","mapActionToText","str","drawCanvas"],"mappings":"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","sourcesContent":["import Config from \"./config.json\";\n\nclass PieceCard {\n\n    constructor() {\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvas.width = Config.card.width;\n        this.canvas.height = Config.card.height;\n    }\n\n    drawCanvas(actions, pieceImage, owner, isKing) {\n        const actionsSize = Config.card.actionsSize;\n        const actionsOffsetX = Config.card.actionsOffsetX;\n        const actionsOffsetY = Config.card.actionsOffsetY;\n        var ctx = this.ctx;\n\n        if (actions !== undefined) {\n            ctx.canvas.width = Config.card.width;\n            ctx.canvas.height = Config.card.height;\n\n            ctx.drawImage(pieceImage, 32, 10);\n\n            // draw actions\n\n            var actionLegend = [];\n\n            for (var i = 0; i < actions.length; i++) {\n                for (var j = 0; j < actions[0].length; j++) {\n                    if (actions[i][j] !== \"-\") {\n                        var offsetY;\n                        if (owner === \"P1\") {\n                            offsetY = actionsOffsetY + (actions[0].length - 1 - j) * actionsSize;\n                        } else {\n                            offsetY = actionsOffsetY + j * actionsSize\n                        }\n                        if (!actionLegend.includes(actions[i][j])) {\n                            actionLegend.push(actions[i][j]);\n                        }\n                        ctx.fillStyle = this.mapActionToColor(actions[i][j]);\n                        ctx.fillRect(actionsOffsetX + i * actionsSize, offsetY, actionsSize, actionsSize);\n                    }\n                }\n            }\n\n\n            ctx.lineWidth = 0.5;\n            ctx.strokeStyle = \"#AAAAAA\";\n            for (i = 0; i < actions.length + 1; i++) {\n                //  ctx.drawline(actionsOffsetX + i * actionsSize, actionsOffsetY, actionsOffsetX + i * actionsSize, actionsOffsetX + actions.length + 1 * actionsSize);\n                //console.log(i);\n\n                ctx.beginPath();\n                ctx.moveTo(actionsOffsetX + i * actionsSize, actionsOffsetY);\n                ctx.lineTo(actionsOffsetX + i * actionsSize, actionsOffsetY + (actions.length) * actionsSize);\n                ctx.stroke();\n\n                ctx.beginPath();\n                ctx.moveTo(actionsOffsetX, actionsOffsetY + i * actionsSize);\n                ctx.lineTo(actionsOffsetX + (actions.length) * actionsSize, actionsOffsetY + i * actionsSize);\n                ctx.stroke();\n            }\n\n            if (isKing) {\n                ctx.font = \"20px Arial\";\n                ctx.fillStyle = \"#111111\";\n                ctx.fillText(\"â™”\", this.canvas.width - 20, 37);\n            }\n        }\n        // Legend\n        for (i = 0; i < actionLegend.length; i++) {\n            ctx.fillStyle = this.mapActionToColor(actionLegend[i]);\n            //console.log(actionLegend[i]);\n            ctx.fillRect(actionsOffsetX, actionsOffsetY + actions.length * actionsSize + (i + 1) * 2 * actionsSize, actionsSize, actionsSize);\n            ctx.font = \"10px Arial\";\n            ctx.fillText(this.mapActionToText(actionLegend[i]), actionsOffsetX + actionsSize * 2, actionsOffsetY + actions.length * actionsSize + (i + 1) * 2 * actionsSize + actionsSize);\n\n        }\n\n    }\n\n\n    mapActionToColor(str) {\n        if (str === \"P\") {\n            return \"#11AA11\";\n        } else if (str === \"E\") {\n            return \"#BBBB11\";\n        } else if (str === \"F\") {\n            return \"#1111BB\";\n        } else if (str === \"M\") {\n            return \"#11BBBB\";\n        } else if (str === \"S\") {\n            return \"#BB55BB\";\n        } else if (str === \"R\") {\n            return \"#BB1111\";\n        } else {\n            return \"#666666\";\n        }\n    }\n\n    mapActionToText(str) {\n        if (str === \"P\") {\n            return \"piece location\";\n        } else if (str === \"E\") {\n            return \"attack only\";\n        } else if (str === \"F\") {\n            return \"move only\";\n        } else if (str === \"M\") {\n            return \"walk a way\";\n        } else if (str === \"S\") {\n            return \"swap positions\";\n        } else if (str === \"R\") {\n            return \"rush\";\n        } else {\n            return \"attack or just move\";\n        }\n    }\n\n    drawPieceCard(actions, pieceImage, owner, isKing) {\n        this.drawCanvas(actions, pieceImage, owner, isKing);\n        return (\n            this.canvas\n        );\n    }\n\n}\nexport default PieceCard;"]},"metadata":{},"sourceType":"module"}